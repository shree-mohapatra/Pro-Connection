{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 31, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/itish/OneDrive/Desktop/MajorProjects/LinkedIn/frontend/src/config/index.jsx"],"sourcesContent":["const { default: axios } = require(\"axios\");\r\n\r\nexport const BASE_URl = \"http://localhost:9090\";\r\nexport const clientServer = axios.create({\r\n  baseURL: BASE_URl,\r\n});\r\n"],"names":[],"mappings":";;;;AAAA,MAAM,EAAE,SAAS,KAAK,EAAE;AAEjB,MAAM,WAAW;AACjB,MAAM,eAAe,MAAM,MAAM,CAAC;IACvC,SAAS;AACX","debugId":null}},
    {"offset": {"line": 78, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/itish/OneDrive/Desktop/MajorProjects/LinkedIn/frontend/src/config/redux/action/authAction/index.js"],"sourcesContent":["import { clientServer } from \"@/config\";\r\nimport { createAsyncThunk } from \"@reduxjs/toolkit\";\r\nimport { connection } from \"next/server\";\r\n\r\nexport const loginUser = createAsyncThunk(\r\n  \"user/login\",\r\n  async (user, thunkAPI) => {\r\n    try {\r\n      const response = await clientServer.post(`/login`, {\r\n        email: user.email,\r\n        password: user.password,\r\n      });\r\n\r\n      if (response.data.token) {\r\n        localStorage.setItem(\"token\", response.data.token);\r\n      } else {\r\n        return thunkAPI.rejectWithValue({\r\n          message: \"token not provided\",\r\n        });\r\n      }\r\n\r\n      return thunkAPI.fulfillWithValue(response.data.token);\r\n    } catch (error) {\r\n      return thunkAPI.rejectWithValue(error.response.data);\r\n    }\r\n  }\r\n);\r\n\r\nexport const registerUser = createAsyncThunk(\r\n  \"user/register\",\r\n  async (user, thunkAPI) => {\r\n    try {\r\n      const request = await clientServer.post(\"/register\", {\r\n        username: user.username,\r\n        password: user.password,\r\n        email: user.email,\r\n        name: user.name,\r\n      });\r\n    } catch (err) {\r\n      return thunkAPI.rejectWithValue(err.response.data);\r\n    }\r\n  }\r\n);\r\n\r\nexport const getAboutUser = createAsyncThunk(\r\n  \"user/getAboutUser\",\r\n  async (user, thunkAPI) => {\r\n    try {\r\n      const response = await clientServer.get(\"/get_user_and_profile\", {\r\n        params: {\r\n          token: user.token,\r\n        },\r\n      });\r\n\r\n      return thunkAPI.fulfillWithValue(response.data);\r\n    } catch (err) {\r\n      return thunkAPI.rejectWithValue(err.response.data);\r\n    }\r\n  }\r\n);\r\n\r\nexport const getAllUsers = createAsyncThunk(\r\n  \"user/getAllUsers\",\r\n  async (_, thunkAPI) => {\r\n    try {\r\n      const response = await clientServer.get(\"/user/get_all_users\");\r\n\r\n      return thunkAPI.fulfillWithValue(response.data);\r\n    } catch (err) {\r\n      return thunkAPI.rejectWithValue(err.response.data);\r\n    }\r\n  }\r\n);\r\n\r\nexport const sendConnectionRequest = createAsyncThunk(\r\n  \"user/sendConnectionRequest\",\r\n  async (user, thunkAPI) => {\r\n    try {\r\n      const response = await clientServer.post(\r\n        \"/user/send_connection_request\",\r\n        {\r\n          token: user.token,\r\n          connectionId: user.user_id,\r\n        }\r\n      );\r\n\r\n      thunkAPI.dispatch(getConnectionsRequest({ token: user.token }));\r\n      return thunkAPI.fulfillWithValue(response.data);\r\n    } catch (error) {\r\n      return thunkAPI.rejectWithValue(error.response.data.message);\r\n    }\r\n  }\r\n);\r\n\r\nexport const getConnectionsRequest = createAsyncThunk(\r\n  \"user/getConnectionRequests\",\r\n  async (user, thunkAPI) => {\r\n    try {\r\n      const response = await clientServer.get(\"/user/getConnectionRequests\", {\r\n        params: {\r\n          token: user.token,\r\n        },\r\n      });\r\n      return thunkAPI.fulfillWithValue(response.data.connections);\r\n    } catch (error) {\r\n      console.log(error);\r\n      return thunkAPI.rejectWithValue(error.response.data.message);\r\n    }\r\n  }\r\n);\r\n\r\nexport const getMyConnectionRequests = createAsyncThunk(\r\n  \"user/getMyConnectionRequests\",\r\n  async (user, thunkAPI) => {\r\n    try {\r\n      const response = await clientServer.get(\"/user/user_connection_request\", {\r\n        params: {\r\n          token: user.token,\r\n        },\r\n      });\r\n      return thunkAPI.fulfillWithValue(response.data);\r\n    } catch (error) {\r\n      return thunkAPI.rejectWithValue(error.response.data.message);\r\n    }\r\n  }\r\n);\r\n\r\nexport const AcceptConnection = createAsyncThunk(\r\n  \"user/acceptConnection\",\r\n  async (user, thunkAPI) => {\r\n    try {\r\n      const response = await clientServer.post(\r\n        \"/user/accept_connection_request\",\r\n        {\r\n          token: user.token,\r\n          requestId: user.connectionId,\r\n          action_type: user.action,\r\n        }\r\n      );\r\n      thunkAPI.dispatch(getConnectionsRequest({ token: user.token }));\r\n      thunkAPI.dispatch(getMyConnectionRequests({ token: user.token }));\r\n      return thunkAPI.fulfillWithValue(response.data);\r\n    } catch (error) {\r\n      return thunkAPI.rejectWithValue(error.response.data.message);\r\n    }\r\n  }\r\n);\r\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 212, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/itish/OneDrive/Desktop/MajorProjects/LinkedIn/frontend/src/config/redux/reducer/authReducer/index.js"],"sourcesContent":["import { createSlice } from \"@reduxjs/toolkit\";\r\nimport {\r\n  getAboutUser,\r\n  getAllUsers,\r\n  getConnectionsRequest,\r\n  getMyConnectionRequests,\r\n  loginUser,\r\n  registerUser,\r\n} from \"../../action/authAction\";\r\n\r\nconst initialState = {\r\n  user: undefined,\r\n  isError: false,\r\n  isSuccess: false,\r\n  isLoading: false,\r\n  loggedIn: false,\r\n  message: \"\",\r\n  isTokenThere: false,\r\n  profileFetched: false,\r\n  connections: [],\r\n  connectionRequest: [],\r\n  all_users: [],\r\n  all_profiles_fetched: false,\r\n};\r\n\r\nconst authSlice = createSlice({\r\n  name: \"auth\",\r\n  initialState,\r\n  reducers: {\r\n    reset: () => initialState,\r\n    handleLoginUser: (state) => {\r\n      state.message = \"hello\";\r\n    },\r\n    emptyMessage: (state) => {\r\n      state.message = \"\";\r\n    },\r\n    setTokenIsThere: (state) => {\r\n      state.isTokenThere = true;\r\n    },\r\n    setTokenIsNotThere: (state) => {\r\n      state.isTokenThere = false;\r\n    },\r\n  },\r\n\r\n  extraReducers: (builder) => {\r\n    builder\r\n      .addCase(loginUser.pending, (state) => {\r\n        state.isLoading = true;\r\n        state.message = \"Knocking the door...\";\r\n      })\r\n      .addCase(loginUser.fulfilled, (state, action) => {\r\n        state.isLoading = false;\r\n        state.isError = false;\r\n        state.isSuccess = true;\r\n        state.loggedIn = true;\r\n        state.message = \"Login is SuccessFul\";\r\n      })\r\n      .addCase(loginUser.rejected, (state, action) => {\r\n        state.isLoading = false;\r\n        state.isError = true;\r\n        state.message = action.payload;\r\n      })\r\n      .addCase(registerUser.pending, (state) => {\r\n        state.isLoading = true;\r\n        state.message = \"Registering you...\";\r\n      })\r\n      .addCase(registerUser.fulfilled, (state, action) => {\r\n        state.isLoading = false;\r\n        state.isError = false;\r\n        state.isSuccess = true;\r\n\r\n        state.message = {\r\n          message: \"Registration is Successfull, Please Login\",\r\n        };\r\n      })\r\n      .addCase(registerUser.rejected, (state, action) => {\r\n        state.isLoading = false;\r\n        state.isError = true;\r\n        state.message = action.payload;\r\n      })\r\n      .addCase(getAboutUser.fulfilled, (state, action) => {\r\n        console.log(\"getAboutUser payload:\", action.payload);\r\n        state.isLoading = false;\r\n        state.isError = false;\r\n        state.user = action.payload;\r\n        if (state.user) {\r\n          state.profileFetched = true;\r\n        }\r\n      })\r\n      .addCase(getAllUsers.fulfilled, (state, action) => {\r\n        state.isLoading = false;\r\n        state.isError = false;\r\n        state.all_profiles_fetched = true;\r\n        state.all_users = action.payload.profiles;\r\n      })\r\n      .addCase(getConnectionsRequest.fulfilled, (state, action) => {\r\n        state.connections = action.payload;\r\n      })\r\n      .addCase(getConnectionsRequest.rejected, (state, action) => {\r\n        state.message = action.payload;\r\n      })\r\n      .addCase(getMyConnectionRequests.fulfilled, (state, action) => {\r\n        state.connectionRequest = action.payload;\r\n      })\r\n      .addCase(getMyConnectionRequests.rejected, (state, action) => {\r\n        state.message = action.payload;\r\n      });\r\n  },\r\n});\r\n\r\nexport const { reset, emptyMessage, setTokenIsThere, setTokenIsNotThere } =\r\n  authSlice.actions;\r\n\r\nexport default authSlice.reducer;\r\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 321, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/itish/OneDrive/Desktop/MajorProjects/LinkedIn/frontend/src/config/redux/action/postAction/index.js"],"sourcesContent":["import { clientServer } from \"@/config\";\r\nimport { createAsyncThunk } from \"@reduxjs/toolkit\";\r\n\r\nexport const getAllPosts = createAsyncThunk(\r\n  \"post/getAllPosts\",\r\n  async (_, thunkAPI) => {\r\n    try {\r\n      const response = await clientServer.get(\"/posts\");\r\n      return thunkAPI.fulfillWithValue(response.data);\r\n    } catch (err) {\r\n      return thunkAPI.rejectWithValue(err.response.data);\r\n    }\r\n  }\r\n);\r\n\r\nexport const createPost = createAsyncThunk(\r\n  \"post/createPost\",\r\n  async (userData, thunkAPI) => {\r\n    const { file, body } = userData;\r\n\r\n    try {\r\n      const formData = new FormData();\r\n      formData.append(\"token\", localStorage.getItem(\"token\"));\r\n      formData.append(\"body\", body);\r\n      formData.append(\"media\", file);\r\n\r\n      const response = await clientServer.post(\"/post\", formData, {\r\n        headers: {\r\n          \"Content-Type\": \"multipart/form-data\",\r\n        },\r\n      });\r\n      if (response.status === 200) {\r\n        return thunkAPI.fulfillWithValue(\"Post Uploaded\");\r\n      } else {\r\n        return thunkAPI.rejectWithValue(\"Post not Uploaded\");\r\n      }\r\n    } catch (error) {\r\n      return thunkAPI.rejectWithValue(error.response.data);\r\n    }\r\n  }\r\n);\r\n\r\nexport const deletePost = createAsyncThunk(\r\n  \"post/deletePost\",\r\n  async (post_id, thunkAPI) => {\r\n    try {\r\n      const response = await clientServer.delete(\"/delete_post\", {\r\n        data: {\r\n          token: localStorage.getItem(\"token\"),\r\n          post_id: post_id.post_id,\r\n        },\r\n      });\r\n      return thunkAPI.fulfillWithValue(response.data);\r\n    } catch (error) {\r\n      return thunkAPI.rejectWithValue(\"something went  wrong\");\r\n    }\r\n  }\r\n);\r\n\r\nexport const incrementPostLike = createAsyncThunk(\r\n  \"post/incrementLike\",\r\n\r\n  async (post, thunkAPI) => {\r\n    try {\r\n      const response = await clientServer.post(`/increment_post_like`, {\r\n        post_id: post.post_id,\r\n        // post_isLiked:post_isLiked\r\n      });\r\n      return thunkAPI.fulfillWithValue(response.data);\r\n    } catch (error) {\r\n      return thunkAPI.rejectWithValue(error.response.data.message);\r\n    }\r\n  }\r\n);\r\n\r\nexport const getAllComments = createAsyncThunk(\r\n  \"post/getAllComments\",\r\n  async (postData, thunkAPI) => {\r\n    try {\r\n      const response = await clientServer.get(\"/get_comments\", {\r\n        params: {\r\n          post_id: postData.post_id,\r\n        },\r\n      });\r\n      return thunkAPI.fulfillWithValue({\r\n        comments: response.data,\r\n        post_id: postData.post_id,\r\n      });\r\n    } catch (error) {\r\n      return thunkAPI.rejectWithValue(\"Something went wrong\");\r\n    }\r\n  }\r\n);\r\n\r\nexport const postComment = createAsyncThunk(\r\n  \"post/postComment\",\r\n  async (commentData, thunkAPI) => {\r\n    try {\r\n      console.log({\r\n        post_id: commentData.post_id,\r\n        body: commentData.body,\r\n      });\r\n      const response = await clientServer.post(\"/comment\", {\r\n        token: localStorage.getItem(\"token\"),\r\n        post_id: commentData.post_id,\r\n        commentBody: commentData.body,\r\n      });\r\n      return thunkAPI.fulfillWithValue(response.data);\r\n    } catch (error) {\r\n      return thunkAPI.rejectWithValue(\"Something went wrong\");\r\n    }\r\n  }\r\n);\r\n"],"names":[],"mappings":";;;;;;;;AAAA;AACA;;;;;;;AAEO,MAAM,cAAc,CAAA,GAAA,wIAAA,CAAA,mBAAgB,AAAD,EACxC,oBACA,OAAO,GAAG;IACR,IAAI;QACF,MAAM,WAAW,MAAM,gHAAA,CAAA,eAAY,CAAC,GAAG,CAAC;QACxC,OAAO,SAAS,gBAAgB,CAAC,SAAS,IAAI;IAChD,EAAE,OAAO,KAAK;QACZ,OAAO,SAAS,eAAe,CAAC,IAAI,QAAQ,CAAC,IAAI;IACnD;AACF;AAGK,MAAM,aAAa,CAAA,GAAA,wIAAA,CAAA,mBAAgB,AAAD,EACvC,mBACA,OAAO,UAAU;IACf,MAAM,EAAE,IAAI,EAAE,IAAI,EAAE,GAAG;IAEvB,IAAI;QACF,MAAM,WAAW,IAAI;QACrB,SAAS,MAAM,CAAC,SAAS,aAAa,OAAO,CAAC;QAC9C,SAAS,MAAM,CAAC,QAAQ;QACxB,SAAS,MAAM,CAAC,SAAS;QAEzB,MAAM,WAAW,MAAM,gHAAA,CAAA,eAAY,CAAC,IAAI,CAAC,SAAS,UAAU;YAC1D,SAAS;gBACP,gBAAgB;YAClB;QACF;QACA,IAAI,SAAS,MAAM,KAAK,KAAK;YAC3B,OAAO,SAAS,gBAAgB,CAAC;QACnC,OAAO;YACL,OAAO,SAAS,eAAe,CAAC;QAClC;IACF,EAAE,OAAO,OAAO;QACd,OAAO,SAAS,eAAe,CAAC,MAAM,QAAQ,CAAC,IAAI;IACrD;AACF;AAGK,MAAM,aAAa,CAAA,GAAA,wIAAA,CAAA,mBAAgB,AAAD,EACvC,mBACA,OAAO,SAAS;IACd,IAAI;QACF,MAAM,WAAW,MAAM,gHAAA,CAAA,eAAY,CAAC,MAAM,CAAC,gBAAgB;YACzD,MAAM;gBACJ,OAAO,aAAa,OAAO,CAAC;gBAC5B,SAAS,QAAQ,OAAO;YAC1B;QACF;QACA,OAAO,SAAS,gBAAgB,CAAC,SAAS,IAAI;IAChD,EAAE,OAAO,OAAO;QACd,OAAO,SAAS,eAAe,CAAC;IAClC;AACF;AAGK,MAAM,oBAAoB,CAAA,GAAA,wIAAA,CAAA,mBAAgB,AAAD,EAC9C,sBAEA,OAAO,MAAM;IACX,IAAI;QACF,MAAM,WAAW,MAAM,gHAAA,CAAA,eAAY,CAAC,IAAI,CAAC,CAAC,oBAAoB,CAAC,EAAE;YAC/D,SAAS,KAAK,OAAO;QAEvB;QACA,OAAO,SAAS,gBAAgB,CAAC,SAAS,IAAI;IAChD,EAAE,OAAO,OAAO;QACd,OAAO,SAAS,eAAe,CAAC,MAAM,QAAQ,CAAC,IAAI,CAAC,OAAO;IAC7D;AACF;AAGK,MAAM,iBAAiB,CAAA,GAAA,wIAAA,CAAA,mBAAgB,AAAD,EAC3C,uBACA,OAAO,UAAU;IACf,IAAI;QACF,MAAM,WAAW,MAAM,gHAAA,CAAA,eAAY,CAAC,GAAG,CAAC,iBAAiB;YACvD,QAAQ;gBACN,SAAS,SAAS,OAAO;YAC3B;QACF;QACA,OAAO,SAAS,gBAAgB,CAAC;YAC/B,UAAU,SAAS,IAAI;YACvB,SAAS,SAAS,OAAO;QAC3B;IACF,EAAE,OAAO,OAAO;QACd,OAAO,SAAS,eAAe,CAAC;IAClC;AACF;AAGK,MAAM,cAAc,CAAA,GAAA,wIAAA,CAAA,mBAAgB,AAAD,EACxC,oBACA,OAAO,aAAa;IAClB,IAAI;QACF,QAAQ,GAAG,CAAC;YACV,SAAS,YAAY,OAAO;YAC5B,MAAM,YAAY,IAAI;QACxB;QACA,MAAM,WAAW,MAAM,gHAAA,CAAA,eAAY,CAAC,IAAI,CAAC,YAAY;YACnD,OAAO,aAAa,OAAO,CAAC;YAC5B,SAAS,YAAY,OAAO;YAC5B,aAAa,YAAY,IAAI;QAC/B;QACA,OAAO,SAAS,gBAAgB,CAAC,SAAS,IAAI;IAChD,EAAE,OAAO,OAAO;QACd,OAAO,SAAS,eAAe,CAAC;IAClC;AACF","debugId":null}},
    {"offset": {"line": 427, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/itish/OneDrive/Desktop/MajorProjects/LinkedIn/frontend/src/config/redux/reducer/postReducer/index.js"],"sourcesContent":["import { createSlice } from \"@reduxjs/toolkit\";\r\nimport { getAllComments, getAllPosts } from \"../../action/postAction\";\r\nimport { getAboutUser } from \"../../action/authAction\";\r\nimport { act } from \"react\";\r\n\r\nconst initialState = {\r\n  posts: [],\r\n  isError: false,\r\n  postFetched: false,\r\n  isLoading: false,\r\n  loggedIn: false,\r\n  message: \"\",\r\n  comments: [],\r\n  postId: \"\",\r\n};\r\n\r\nconst postSlice = createSlice({\r\n  name: \"post\",\r\n  initialState,\r\n  reducers: {\r\n    reset: () => initialState,\r\n    resetPostId: (state) => {\r\n      state.postId = \"\";\r\n    },\r\n  },\r\n\r\n  extraReducers: (builder) => {\r\n    builder\r\n      .addCase(getAllPosts.pending, (state) => {\r\n        state.isLoading = true;\r\n        state.message = \"Fetching All the posts...\";\r\n      })\r\n      .addCase(getAllPosts.fulfilled, (state, action) => {\r\n        state.isLoading = false;\r\n        state.isError = false;\r\n        state.postFetched = true;\r\n        state.posts = action.payload.posts.reverse();\r\n        console.log(`HERE`, state.posts);\r\n      })\r\n      .addCase(getAllPosts.rejected, (state, action) => {\r\n        state.isLoading = false;\r\n        state.isError = true;\r\n        state.message = action.payload;\r\n      })\r\n      .addCase(getAllComments.fulfilled, (state, action) => {\r\n        state.postId = action.payload.post_id;\r\n        state.comments = action.payload.comments;\r\n      });\r\n  },\r\n});\r\n\r\nexport const { resetPostId } = postSlice.actions;\r\n\r\nexport default postSlice.reducer;\r\n"],"names":[],"mappings":";;;;AAAA;AACA;AACA;AACA;;;;;;;;;;;AAEA,MAAM,eAAe;IACnB,OAAO,EAAE;IACT,SAAS;IACT,aAAa;IACb,WAAW;IACX,UAAU;IACV,SAAS;IACT,UAAU,EAAE;IACZ,QAAQ;AACV;AAEA,MAAM,YAAY,CAAA,GAAA,wIAAA,CAAA,cAAW,AAAD,EAAE;IAC5B,MAAM;IACN;IACA,UAAU;QACR,OAAO,IAAM;QACb,aAAa,CAAC;YACZ,MAAM,MAAM,GAAG;QACjB;IACF;IAEA,eAAe,CAAC;QACd,QACG,OAAO,CAAC,gJAAA,CAAA,cAAW,CAAC,OAAO,EAAE,CAAC;YAC7B,MAAM,SAAS,GAAG;YAClB,MAAM,OAAO,GAAG;QAClB,GACC,OAAO,CAAC,gJAAA,CAAA,cAAW,CAAC,SAAS,EAAE,CAAC,OAAO;YACtC,MAAM,SAAS,GAAG;YAClB,MAAM,OAAO,GAAG;YAChB,MAAM,WAAW,GAAG;YACpB,MAAM,KAAK,GAAG,OAAO,OAAO,CAAC,KAAK,CAAC,OAAO;YAC1C,QAAQ,GAAG,CAAC,CAAC,IAAI,CAAC,EAAE,MAAM,KAAK;QACjC,GACC,OAAO,CAAC,gJAAA,CAAA,cAAW,CAAC,QAAQ,EAAE,CAAC,OAAO;YACrC,MAAM,SAAS,GAAG;YAClB,MAAM,OAAO,GAAG;YAChB,MAAM,OAAO,GAAG,OAAO,OAAO;QAChC,GACC,OAAO,CAAC,gJAAA,CAAA,iBAAc,CAAC,SAAS,EAAE,CAAC,OAAO;YACzC,MAAM,MAAM,GAAG,OAAO,OAAO,CAAC,OAAO;YACrC,MAAM,QAAQ,GAAG,OAAO,OAAO,CAAC,QAAQ;QAC1C;IACJ;AACF;AAEO,MAAM,EAAE,WAAW,EAAE,GAAG,UAAU,OAAO;uCAEjC,UAAU,OAAO","debugId":null}},
    {"offset": {"line": 493, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/itish/OneDrive/Desktop/MajorProjects/LinkedIn/frontend/src/config/redux/store.js"],"sourcesContent":["import { configureStore } from \"@reduxjs/toolkit\";\r\nimport authReducer from \"./reducer/authReducer\";\r\nimport postReducer from \"./reducer/postReducer\";\r\n\r\nexport const store = configureStore({\r\n  reducer: {\r\n    auth: authReducer,\r\n    postReducer: postReducer,\r\n  },\r\n});\r\n"],"names":[],"mappings":";;;AAAA;AACA;AACA;;;;;;;;;;AAEO,MAAM,QAAQ,CAAA,GAAA,wIAAA,CAAA,iBAAc,AAAD,EAAE;IAClC,SAAS;QACP,MAAM,kJAAA,CAAA,UAAW;QACjB,aAAa,kJAAA,CAAA,UAAW;IAC1B;AACF","debugId":null}},
    {"offset": {"line": 531, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/itish/OneDrive/Desktop/MajorProjects/LinkedIn/frontend/src/pages/_app.js"],"sourcesContent":["import { store } from \"@/config/redux/store\";\nimport \"@/styles/globals.css\";\nimport { Provider } from \"react-redux\";\n\nexport default function App({ Component, pageProps }) {\n  return (\n    <>\n      <Provider store={store}>\n        <Component {...pageProps} />\n      </Provider>\n    </>\n  );\n}\n"],"names":[],"mappings":";;;;AAAA;AAEA;;;;;;;;;;AAEe,SAAS,IAAI,EAAE,SAAS,EAAE,SAAS,EAAE;IAClD,qBACE;kBACE,cAAA,qKAAC,4HAAA,CAAA,WAAQ;YAAC,OAAO,wHAAA,CAAA,QAAK;sBACpB,cAAA,qKAAC;gBAAW,GAAG,SAAS;;;;;;;;;;;;AAIhC","debugId":null}}]
}